//
//  ServiceType.swift
//  Vivi
//
//  Created by Дмитрий Дудкин on 03.05.2022.
//

import Foundation
import UIKit

enum ServiceType: String, CaseIterable {
    case consultation = "Консультация"
    case planning = "Планировочное решение"
    case sketch = "Эскизный проект"
    case fullProject = "Полный проект"
}

extension ServiceType {
    func priceTitle() -> String {
        switch self {
        case .consultation:
            return "2500 руб."
        case .planning:
            return "до 50 кв. м: 15000 руб.\nдо 100 кв. м: 18000 руб.\nдо 150 кв. м: 21000 руб."
        case .sketch:
            return "1200 руб. кв. м"
        case .fullProject:
            return "1500/1800 руб. кв. м"
        }
    }
    
    func titles() -> [String] {
        switch self {
        case .consultation:
            return ["Вы можете задать все интересующие Вас вопросы.",
                    " Помощь в выборе квартиры/дома до его покупки.",
                    "Расстановка мебели, подбор цвета, помощь в выборе материалов, выезд в магазин и т.д.",
                    "По итогу встречи Вы получаете файл с ссылкой и тезисной выдержкой встречи."]

        case .planning:
            return ["Анкетирование",
                     "Выезд на объект для обмера Вашего помещения, фотофиксация",
                     "Обмерный план",
                     "План демонтажа",
                     "План монтажа",
                     "План после перепланировки",
                     "План расстановки мебели (3 варианта)",
                     "ЗD модель одного из вариантов"]
        case .sketch:
            return ["Анкетирование",
                    "Выезд на объект для обмера Вашего помещения, фотофиксация",
                    "Стилистические коллажи",
                    "Обмерный план",
                    "План демонтажа",
                    "План монтажа",
                    "План после перепланировки",
                    "План дверных проемов",
                    "План расстановки мебели",
                   "План размещения розеток",
                   "План освещения",
                    "План выключателей",
                    "План напольных покрытий",
                    "Раскладка плитки на стенах",
                    "Спецификация по позициям мебели и материалов",
]
        case .fullProject:
            return ["Анкетирование",
                    "Выезд на объект для обмера Вашего помещения, фотофиксация",
                    "Стилистические коллажи/ Визуализации всех помещений",
                    "Обмерный план",
                    "План демонтажа",
                    "План монтажа",
                    "Приложение по монтажу конструкций",
                    "План после перепланировки",
                    "План дверных проемов",
                    "План расстановки мебели",
                    "План-схема зон хранения",
                    "План пола",
                    "План теплого пола",
                    "План монтажа напольных плинтусов",
                    "План монтажа настенных молдингов",
                    "План монтажа потолочных молдингов",
                    "План размещения осветительного оборудования",
                    "План выключателей с указанием групп освещения",
                    "План размещения розеток",
                    "План потолка",
                    "План отделки стен",
                    "План сантехнического оборудования",
                    "Техкарты",
                    "План-схема расстановки кондиционеров",
                    "Развертки стен",
                    "Чертежи мебели для индивидуального заказа",
                    "Спецификации",
                    "Смета"]
        }
    }
    
    func image() -> UIImage? {
//        switch self {
//        case .consultation:
//            <#code#>
//        case .planning:
//            <#code#>
//        case .sketch:
//            <#code#>
//        case .fullProject:
//            <#code#>
//        }
        return R.image.consultation()
    }
}

extension ServiceType {
    func isPriceForUnit() -> Bool {
        return self != .consultation
    }
    
    func priceForUnit() -> Int {
        switch self {
        case .planning:
            return 300
        case .sketch:
            return 1200
        case .fullProject:
            return 1800
        default:
            return 0
        }
    }
}
